\relax 
\providecommand\babel@aux[2]{}
\@nameuse{bbl@beforestart}
\abx@aux@refcontext{nty/global//global/global}
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\abx@aux@cite{0}{GCC_vectorization}
\abx@aux@segm{0}{0}{GCC_vectorization}
\abx@aux@cite{0}{GCC_dev_opts}
\abx@aux@segm{0}{0}{GCC_dev_opts}
\abx@aux@cite{0}{GCC_optimize_opts}
\abx@aux@segm{0}{0}{GCC_optimize_opts}
\abx@aux@cite{0}{GCC_x86_opts}
\abx@aux@segm{0}{0}{GCC_x86_opts}
\babel@aux{english}{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Array addition and vectorization}{1}{section.1}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {1}{\ignorespaces Implemented algorithm}}{1}{listing.caption.1}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{code:array}{{1}{1}{Implemented algorithm}{listing.caption.1}{}}
\newlabel{code:array@cref}{{[listing][1][]1}{[1][1][]1}}
\abx@aux@cite{0}{GCC_optimize_opts}
\abx@aux@segm{0}{0}{GCC_optimize_opts}
\abx@aux@cite{0}{GCC_optimize_opts}
\abx@aux@segm{0}{0}{GCC_optimize_opts}
\abx@aux@cite{0}{GCC_optimize_opts}
\abx@aux@segm{0}{0}{GCC_optimize_opts}
\abx@aux@cite{0}{GCC_optimize_opts}
\abx@aux@segm{0}{0}{GCC_optimize_opts}
\abx@aux@cite{0}{GCC_x86_opts}
\abx@aux@segm{0}{0}{GCC_x86_opts}
\abx@aux@cite{0}{GCC_x86_opts}
\abx@aux@segm{0}{0}{GCC_x86_opts}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Run times by array size - Sequential (times in seconds)}}{2}{table.caption.3}\protected@file@percent }
\newlabel{table:array_seq_cluster}{{1}{2}{Run times by array size - Sequential (times in seconds)}{table.caption.3}{}}
\newlabel{table:array_seq_cluster@cref}{{[table][1][]1}{[1][2][]2}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Run times by array size - Parallelised (times in seconds)}}{2}{table.caption.3}\protected@file@percent }
\newlabel{table:array_par_cluster}{{2}{2}{Run times by array size - Parallelised (times in seconds)}{table.caption.3}{}}
\newlabel{table:array_par_cluster@cref}{{[table][2][]2}{[1][2][]2}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Run times by array size - Local machine - Sequential (times in seconds)}}{3}{table.caption.4}\protected@file@percent }
\newlabel{table:array_seq_local}{{3}{3}{Run times by array size - Local machine - Sequential (times in seconds)}{table.caption.4}{}}
\newlabel{table:array_seq_local@cref}{{[table][3][]3}{[1][3][]3}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Run times by array size - Local machine - Parallelised (times in seconds)}}{3}{table.caption.4}\protected@file@percent }
\newlabel{table:array_par_local}{{4}{3}{Run times by array size - Local machine - Parallelised (times in seconds)}{table.caption.4}{}}
\newlabel{table:array_par_local@cref}{{[table][4][]4}{[1][3][]3}}
\@writefile{loplot}{\contentsline {plot}{\numberline {1}{\ignorespaces Run times by array size}}{3}{plot.caption.6}\protected@file@percent }
\newlabel{plot:array}{{1}{3}{Run times by array size}{plot.caption.6}{}}
\newlabel{plot:array@cref}{{[plot][1][]1}{[1][3][]3}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Matrix copy via block reverse ordering}{4}{section.2}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {2}{\ignorespaces Implemented algorithm}}{4}{listing.caption.7}\protected@file@percent }
\newlabel{code:matrix}{{2}{4}{Implemented algorithm}{listing.caption.7}{}}
\newlabel{code:matrix@cref}{{[listing][2][]2}{[1][4][]4}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Run times by $b$ size - Sequential (times in seconds)}}{4}{table.caption.9}\protected@file@percent }
\newlabel{table:matrix_seq}{{5}{4}{Run times by $b$ size - Sequential (times in seconds)}{table.caption.9}{}}
\newlabel{table:matrix_seq@cref}{{[table][5][]5}{[1][4][]4}}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces Run times by $b$ size - Parallelised (times in seconds)}}{4}{table.caption.9}\protected@file@percent }
\newlabel{table:matrix_par}{{6}{4}{Run times by $b$ size - Parallelised (times in seconds)}{table.caption.9}{}}
\newlabel{table:matrix_par@cref}{{[table][6][]6}{[1][4][]4}}
\newlabel{eq:bandwidth}{{1}{5}{Results analysis}{equation.2.1}{}}
\newlabel{eq:bandwidth@cref}{{[equation][1][]1}{[1][4][]5}}
\@writefile{lot}{\contentsline {table}{\numberline {7}{\ignorespaces Effective bandwidths in GB/s}}{5}{table.caption.10}\protected@file@percent }
\newlabel{table:bandwidths}{{7}{5}{Effective bandwidths in GB/s}{table.caption.10}{}}
\newlabel{table:bandwidths@cref}{{[table][7][]7}{[1][5][]5}}
\@writefile{loplot}{\contentsline {plot}{\numberline {2}{\ignorespaces Effective bandwidth by $b$ size}}{5}{plot.caption.12}\protected@file@percent }
\newlabel{plot:matrix}{{2}{5}{Effective bandwidth by $b$ size}{plot.caption.12}{}}
\newlabel{plot:matrix@cref}{{[plot][2][]2}{[1][5][]5}}
\gdef\minted@oldcachelist{,
  manni.pygstyle,
  C9F4C33FB26D6D8AC6B7016CEF33FA1AD56AE0B2481EE412FC017990EB45D5AC.pygtex,
  E58751436A195EDCD3813D9DC67094D5D56AE0B2481EE412FC017990EB45D5AC.pygtex}
\abx@aux@read@bbl@mdfivesum{356B76FE0BCF242CD2C9DBDDF836638E}
\abx@aux@defaultrefcontext{0}{GCC_vectorization}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{GCC_dev_opts}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{GCC_optimize_opts}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{GCC_x86_opts}{nty/global//global/global}
\gdef \@abspage@last{6}
